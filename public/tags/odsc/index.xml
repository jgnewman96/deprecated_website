<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ODSC on Welcome</title>
    <link>https://judahgnewman.netlify.com/tags/odsc/</link>
    <description>Recent content in ODSC on Welcome</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Oct 2019 13:53:00 -0700</lastBuildDate>
    
	<atom:link href="https://judahgnewman.netlify.com/tags/odsc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ML Flow: Platform for Complete Machine Learning Life Cycle</title>
      <link>https://judahgnewman.netlify.com/writing/mlflow_odsc/</link>
      <pubDate>Tue, 29 Oct 2019 13:53:00 -0700</pubDate>
      
      <guid>https://judahgnewman.netlify.com/writing/mlflow_odsc/</guid>
      <description>Talk given by Jules Damji: git hub repo
Motivation Machine learning development is complex. This is not due to the underlying theory but rather all of the different stages in development. Each stage has its own requirements and goals. We have developed tools and best practices for this for traditional software development, but not Machine Learning.
Here are the differences between traditional software and machine learning
Traditional Software:
 Meet a functional specification Quality depends on the code One software stack  Machine Learning</description>
    </item>
    
    <item>
      <title>ODSC</title>
      <link>https://judahgnewman.netlify.com/writing/odsc/</link>
      <pubDate>Tue, 29 Oct 2019 12:17:01 -0700</pubDate>
      
      <guid>https://judahgnewman.netlify.com/writing/odsc/</guid>
      <description> I attended ODSC (Open Data Science Conference) West in October 2019. Here are the notes that I took from every session that I attended while I was there.
Day 1 Interpretable Knowledge Discovery Reinforced by Visual Methods
User-Centric Design for Data Scientists
ML Flow: Platform for Complete Machine Learning Life Cycle
Day 2 Day 3 Day 4 </description>
    </item>
    
    <item>
      <title>User-Centric Design for Data Scientists</title>
      <link>https://judahgnewman.netlify.com/writing/user_centeric_design_odsc/</link>
      <pubDate>Tue, 29 Oct 2019 11:47:50 -0700</pubDate>
      
      <guid>https://judahgnewman.netlify.com/writing/user_centeric_design_odsc/</guid>
      <description>By Annie Darmofal and Katie Malone
They both work at Tempus
Motivation Even if we build the most incredible thing, if it is not designed with users in mind, no body will use it. If we have built something that nobody will use, is it even incredible. If nobody is using what we have built than that is a failing.
We can build tools that users actually care about and will use if we take a user-centered design approach.</description>
    </item>
    
    <item>
      <title>Interpretable Knowledge Discovery Reinforced by Visual Methods</title>
      <link>https://judahgnewman.netlify.com/writing/kdd_odsc/</link>
      <pubDate>Tue, 29 Oct 2019 08:05:34 -0700</pubDate>
      
      <guid>https://judahgnewman.netlify.com/writing/kdd_odsc/</guid>
      <description>Talk given by Boris Kovalerchuk , Slides
Motivation Boris motivated the need for visual techniques with an example on the Iris data set. He showed three different models for the Iris data set, shown below.
He highlighted that the problem with each of these analytical approaches is that they generalize to areas we have seen before. Ideally, instead we would have a model that classified points in space we had seen before and refused to classify points in the unknown space.</description>
    </item>
    
  </channel>
</rss>